version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chatty-postgres
    environment:
      POSTGRES_DB: chatty
      POSTGRES_USER: chatty
      POSTGRES_PASSWORD: chatty_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatty -d chatty"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chatty-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: chatty-redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - chatty-network

  # Chatty Application
  chatty-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: chatty-app
    environment:
      # Database configuration
      DATABASE_URL: postgresql://chatty:chatty_password@postgres:5432/chatty
      
      # Redis configuration
      REDIS_URL: redis://:redis_password@redis:6379/0
      
      # Application configuration
      APP_ENV: development
      LOG_LEVEL: INFO
      CORS_ORIGINS: "http://localhost:3000,http://localhost:8080"
      
      # Security
      SECRET_KEY: dev-secret-key-change-in-production
      
      # Monitoring
      ENABLE_METRICS: "true"
      METRICS_PORT: "9090"
    ports:
      - "8000:8000"
      - "9090:9090"  # Prometheus metrics
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chatty-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: chatty-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - chatty-network
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: chatty-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin_password
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - chatty-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  chatty-network:
    driver: bridge

